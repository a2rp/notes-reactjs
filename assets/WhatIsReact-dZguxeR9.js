import{j as e}from"./index-C1_RbWbm.js";import{S as t}from"./styled-g-dImJSe.js";const i=()=>e.jsxs(t.Page,{children:[e.jsx(t.Title,{children:"What is React?"}),e.jsxs(t.Lead,{children:["React is a ",e.jsx("b",{children:"JavaScript library for building user interfaces"}),". You describe what the UI should look like for a given state, and React updates the browser for you when that state changes."]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"Why React exists (the problem it solves)"}),e.jsxs(t.List,{children:[e.jsx("li",{children:"In plain JS or jQuery, you manually find elements and update them. As apps grow, those manual updates become fragile and hard to reason about."}),e.jsxs("li",{children:["React makes UI ",e.jsx("b",{children:"declarative"}),": write ",e.jsx("em",{children:"what"})," you want, not ",e.jsx("em",{children:"how"})," to change the DOM step by step."]}),e.jsxs("li",{children:["React breaks UI into reusable ",e.jsx("b",{children:"components"})," (small pieces like Button, Card, Form) so large apps stay organized."]})]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"Core ideas (at a glance)"}),e.jsxs(t.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Component-based"}),": UI is built from small, reusable pieces."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Declarative"}),": UI is a function of state (",e.jsx(t.InlineCode,{children:"UI = f(state)"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"One-way data flow"}),": data moves down from parents to children via ",e.jsx(t.InlineCode,{children:"props"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"State"}),": each component can remember information and re-render when that information changes."]}),e.jsxs("li",{children:[e.jsx("b",{children:"JSX"}),": a JavaScript syntax extension that lets you write HTML-like markup inside JS."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Efficient updates"}),": React calculates what changed and updates only those parts in the DOM."]})]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"Your first tiny component"}),e.jsxs("p",{children:["A ",e.jsx("b",{children:"component"})," is just a JavaScript function that returns JSX. You can pass data to it using ",e.jsx(t.InlineCode,{children:"props"}),"."]}),e.jsx(t.Pre,{children:e.jsx("code",{children:`function Hello({ name }) {
  return <h3>Hello, {name}</h3>;
}

// Usage inside another component's JSX:
// <Hello name="Ashish" />  // renders: Hello, Ashish
`})}),e.jsxs(t.Small,{children:["Tip: Component names must start with a capital letter (e.g., ",e.jsx(t.InlineCode,{children:"Hello"}),")."]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"State: making the UI interactive"}),e.jsxs("p",{children:["Use ",e.jsx(t.InlineCode,{children:"useState"})," to remember values over time. When you update state, React re-renders the component and refreshes the UI."]}),e.jsx(t.Pre,{children:e.jsx("code",{children:`import { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0);   // state with initial value 0

  return (
    <button onClick={() => setCount(c => c + 1)}>
      Clicked {count} times
    </button>
  );
}

// <Counter />  // each click updates state and the text on the button
`})}),e.jsxs(t.Callout,{children:[e.jsx("b",{children:"Why no manual DOM code?"})," Because React re-renders the component when state changes, calculates the difference (what actually changed), and updates only that part in the DOM. You focus on the data; React handles the DOM."]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"Props vs State (quick check)"}),e.jsxs(t.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Props"}),": read-only inputs passed from a parent. Think “config”."]}),e.jsxs("li",{children:[e.jsx("b",{children:"State"}),": private data owned by a component that can change over time (user input, counters, fetched data)."]})]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"Where does React run?"}),e.jsxs(t.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Web apps"})," (what you’re building now)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Server-rendered"})," pages (with frameworks) for SEO/perf."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Native apps"})," with React Native (same component mindset)."]})]})]}),e.jsxs(t.Section,{children:[e.jsx(t.H2,{children:"What React is not (by itself)"}),e.jsxs(t.List,{children:[e.jsx("li",{children:"It’s not a router → use React Router."}),e.jsx("li",{children:"It’s not a data layer → use fetch/React Query/SWR, etc."}),e.jsx("li",{children:"It’s not a styling system → use CSS, CSS Modules, styled-components, etc."})]})]}),e.jsxs(t.Callout,{children:[e.jsx("b",{children:"Summary:"})," React helps you build UIs by composing components, passing data down via props, and reacting to state changes. Start thinking in components and “UI = f(state)”."]})]});export{i as default};
