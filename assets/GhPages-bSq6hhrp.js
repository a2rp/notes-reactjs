import{j as e}from"./index-CDxhzYTb.js";import{S as s}from"./styled-Du7ucoCd.js";const l=()=>e.jsxs(s.Page,{children:[e.jsx(s.Title,{children:"GitHub Pages (gh-pages)"}),e.jsxs(s.Lead,{children:[e.jsx("b",{children:"GitHub Pages"})," is a free static hosting service built into GitHub. It serves the files that you push to a special branch (e.g., ",e.jsx(s.InlineCode,{children:"gh-pages"}),") or the",e.jsx(s.InlineCode,{children:"docs/"})," folder of your repository. For a Vite + React single-page app (SPA), we build the site to ",e.jsx(s.InlineCode,{children:"dist/"})," and publish those static files to GitHub Pages."]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Key Terms (learn these first)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Static hosting:"})," a server that only serves files (HTML/CSS/JS/images). No Node/Express backend."]}),e.jsxs("li",{children:[e.jsx("b",{children:"SPA (Single-Page App):"})," the server serves a single ",e.jsx(s.InlineCode,{children:"index.html"}),"; routing happens in the browser via React Router."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Build:"})," the production-optimized files generated by Vite into ",e.jsx(s.InlineCode,{children:"dist/"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Base path:"})," the sub-directory your app lives under (e.g., ",e.jsx(s.InlineCode,{children:"/my-repo/"})," on GitHub Pages)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"basename (React Router):"})," a prop on ",e.jsx(s.InlineCode,{children:"<BrowserRouter>"})," telling the router your app’s base path."]}),e.jsxs("li",{children:[e.jsx("b",{children:"SPA fallback:"})," a copy of ",e.jsx(s.InlineCode,{children:"index.html"})," named ",e.jsx(s.InlineCode,{children:"404.html"})," so unknown routes still load your SPA."]}),e.jsxs("li",{children:[e.jsx("b",{children:"CI (Continuous Integration):"})," automated scripts (GitHub Actions) that build and deploy when you push code."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"When should you use GitHub Pages?"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Perfect for:"})," documentation, portfolios, small to medium SPAs, demos."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Not for:"})," apps needing server-side auth, databases, or custom headers (use Vercel/Netlify/Cloudflare Pages then)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Cost:"})," free for public repos."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Step 1 — Configure Vite base & Router basename"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["If the repo is ",e.jsx(s.InlineCode,{children:"a2rp/notes-reactjs"}),", your Pages URL is",e.jsx(s.InlineCode,{children:"https://a2rp.github.io/notes-reactjs/"}),". The base path is"," ",e.jsx(s.InlineCode,{children:"/notes-reactjs/"}),"."]}),e.jsxs("li",{children:["Set Vite’s ",e.jsx(s.InlineCode,{children:"base"})," so asset URLs are correct in production."]}),e.jsxs("li",{children:["Set React Router’s ",e.jsx(s.InlineCode,{children:"basename"})," so routes work under the sub-folder."]})]}),e.jsx(s.Pre,{children:`// vite.config.js
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

export default defineConfig({
  plugins: [react()],
  base: "/notes-reactjs/", // <-- repo name
});`}),e.jsx(s.Pre,{children:`// src/main.jsx
import { BrowserRouter } from "react-router-dom";
// ...
<BrowserRouter basename="/notes-reactjs">
  <App />
</BrowserRouter>`}),e.jsxs(s.Small,{children:["For a ",e.jsx("b",{children:"user/organization site"})," (repo named ",e.jsx(s.InlineCode,{children:"a2rp.github.io"}),"), the base path is ",e.jsx("i",{children:"root"})," (",e.jsx(s.InlineCode,{children:'"/"'}),"), so you can omit ",e.jsx(s.InlineCode,{children:"base"})," and ",e.jsx(s.InlineCode,{children:"basename"}),"."]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Step 2 — SPA Fallback (404.html)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["GitHub Pages serves ",e.jsx(s.InlineCode,{children:"index.html"})," only for the root URL. Deep links like"," ",e.jsx(s.InlineCode,{children:"/topics/state/useState-basics"})," may 404 unless you provide a fallback."]}),e.jsxs("li",{children:["The common solution is to copy ",e.jsx(s.InlineCode,{children:"dist/index.html"})," to"," ",e.jsx(s.InlineCode,{children:"dist/404.html"})," during deployment so the SPA can boot and handle the route."]})]}),e.jsx(s.Pre,{children:`# simple shell step (used in CI)
cp dist/index.html dist/404.html`})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Option A — Auto-deploy with GitHub Actions (recommended)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["Every push to ",e.jsx(s.InlineCode,{children:"main"})," builds and publishes your site to the ",e.jsx("b",{children:"Pages"})," environment."]}),e.jsx("li",{children:"Works well with Vite’s hashed assets (cache-friendly)."})]}),e.jsx(s.Pre,{children:`# .github/workflows/deploy.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: SPA fallback
        run: cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: \${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4`}),e.jsxs(s.Small,{children:["In your repo: ",e.jsx("b",{children:"Settings → Pages"})," → Source: “GitHub Actions”. GitHub will serve the artifact produced by the workflow."]})]}),e.jsxs(s.Section,{children:[e.jsxs(s.H2,{children:["Option B — Manual deploy with ",e.jsx("code",{children:"gh-pages"})," CLI"]}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["Installs a dev dependency that pushes ",e.jsx(s.InlineCode,{children:"dist/"})," to a ",e.jsx(s.InlineCode,{children:"gh-pages"})," branch."]}),e.jsx("li",{children:"Good for quick demos; CI is better for teams/automation."})]}),e.jsx(s.Pre,{children:`# install
npm i -D gh-pages

# package.json (scripts)
{
  "scripts": {
    "predeploy": "npm run build && cp dist/index.html dist/404.html",
    "deploy": "gh-pages -d dist -t true"
  }
}

# run
npm run deploy`}),e.jsxs(s.Small,{children:["First time only: enable Pages in ",e.jsx("b",{children:"Settings → Pages"}),", set source to ",e.jsx(s.InlineCode,{children:"gh-pages"})," branch."]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Custom Domain (optional)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["In ",e.jsx("b",{children:"Settings → Pages"}),", set your custom domain (e.g., ",e.jsx(s.InlineCode,{children:"notes.ashishranjan.in"}),")."]}),e.jsxs("li",{children:["GitHub will create/update a ",e.jsx(s.InlineCode,{children:"CNAME"})," file at build time, or you can place one in ",e.jsx(s.InlineCode,{children:"public/CNAME"}),"."]}),e.jsxs("li",{children:["Update DNS: add a CNAME record pointing to ",e.jsx(s.InlineCode,{children:"a2rp.github.io"}),"."]}),e.jsx("li",{children:"Wait for HTTPS to finish provisioning."})]}),e.jsx(s.Pre,{children:`// public/CNAME
notes.ashishranjan.in`})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Caching & Performance (what to know)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Vite hashed assets:"})," files like ",e.jsx(s.InlineCode,{children:"chunk.abc123.js"})," let browsers cache forever. New builds get new hashes → automatic invalidation."]}),e.jsxs("li",{children:[e.jsx("b",{children:"index.html:"})," avoid aggressive caching here—this file points to the latest hashes. GitHub Pages doesn’t let you set custom headers; rely on hash versioning."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Images:"})," prefer import-time asset hashing or put versioned filenames to leverage cache safely."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Troubleshooting (common issues)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Blank page after deploy:"})," check ",e.jsx(s.InlineCode,{children:"base"})," in ",e.jsx(s.InlineCode,{children:"vite.config.js"})," and ",e.jsx(s.InlineCode,{children:"basename"})," on ",e.jsx(s.InlineCode,{children:"BrowserRouter"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Deep link 404s:"})," ensure ",e.jsx(s.InlineCode,{children:"dist/404.html"})," exists (copy of ",e.jsx(s.InlineCode,{children:"index.html"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Assets 404:"})," mismatched base path or forgetting the trailing slash (use ",e.jsx(s.InlineCode,{children:"/repo-name/"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Old code showing:"})," browser cache; hard refresh, or bump the build (hashes handle this automatically)."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Do & Don’t"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," set ",e.jsx(s.InlineCode,{children:"base"})," and ",e.jsx(s.InlineCode,{children:"basename"})," for project pages."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," create ",e.jsx(s.InlineCode,{children:"404.html"})," for SPA fallback."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," prefer GitHub Actions for automatic, repeatable deploys."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don’t"})," expect server features (headers, redirects, SSR) on GitHub Pages."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don’t"})," check ",e.jsx(s.InlineCode,{children:"dist/"})," into git—always build in CI or locally before deploy."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Glossary"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Artifact:"})," the built files zipped and passed between workflow steps for deployment."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Runner:"})," the virtual machine that executes your GitHub Actions job."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Branch:"})," a line of development in git. Pages often uses the ",e.jsx(s.InlineCode,{children:"gh-pages"})," branch."]}),e.jsxs("li",{children:[e.jsx("b",{children:"CNAME:"})," a DNS record mapping your custom domain to ",e.jsx(s.InlineCode,{children:"USERNAME.github.io"}),"."]})]})]}),e.jsxs(s.Callout,{children:["Summary: Build with Vite, set the correct base path, add a 404 fallback for SPAs, and deploy via GitHub Actions or the ",e.jsx("i",{children:"gh-pages"})," CLI. For most React notes sites, this is fast, free, and reliable."]})]});export{l as default};
