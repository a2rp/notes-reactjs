import{j as e}from"./index-CAccbg1x.js";import{S as s}from"./styled-BJ30T1Q4.js";const r=()=>e.jsxs(s.Page,{children:[e.jsx(s.Title,{children:"CORS & Cookies"}),e.jsxs(s.Lead,{children:[e.jsx("b",{children:"CORS"})," (Cross-Origin Resource Sharing) is a browser security policy that controls whether a web page from one ",e.jsx("i",{children:"origin"})," may read responses from a different origin. ",e.jsx("b",{children:"Cookies"})," are small key-value pairs the browser stores and automatically attaches to matching requests. Understanding how they interact is essential for secure SPAs and APIs."]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Same-Origin Policy (SOP)"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Origin:"})," the tuple ",e.jsx(s.InlineCode,{children:"scheme://host:port"})," (e.g., ",e.jsx(s.InlineCode,{children:"https://app.example.com:443"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"SOP:"})," by default, scripts on one origin cannot read responses from another origin."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Different origins examples:"})," ",e.jsx(s.InlineCode,{children:"https://app.example.com"})," vs ",e.jsx(s.InlineCode,{children:"https://api.example.com"})," (host differs), or ",e.jsx(s.InlineCode,{children:"http"})," vs ",e.jsx(s.InlineCode,{children:"https"})," (scheme differs), or ports differ."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"What is CORS?"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"CORS:"})," an HTTP header protocol that lets servers explicitly say which origins may read their responses."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Simple request:"})," ",e.jsx(s.InlineCode,{children:"GET"}),", ",e.jsx(s.InlineCode,{children:"HEAD"}),", or ",e.jsx(s.InlineCode,{children:"POST"})," with content types ",e.jsx(s.InlineCode,{children:"text/plain"}),", ",e.jsx(s.InlineCode,{children:"multipart/form-data"}),", or ",e.jsx(s.InlineCode,{children:"application/x-www-form-urlencoded"}),", and only simple headers."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Preflight:"})," for other cases (custom headers, non-simple methods like ",e.jsx(s.InlineCode,{children:"PUT/DELETE"}),", or ",e.jsx(s.InlineCode,{children:"application/json"}),"), the browser first sends an ",e.jsx(s.InlineCode,{children:"OPTIONS"})," request to ask permission."]})]}),e.jsx(s.Pre,{children:`// Typical preflight
OPTIONS /users HTTP/1.1
Origin: https://app.example.com
Access-Control-Request-Method: PUT
Access-Control-Request-Headers: content-type

// Server grants
HTTP/1.1 204 No Content
Access-Control-Allow-Origin: https://app.example.com
Access-Control-Allow-Methods: GET,POST,PUT,DELETE
Access-Control-Allow-Headers: content-type
Access-Control-Max-Age: 600
Vary: Origin`})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Key CORS Response Headers"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Access-Control-Allow-Origin"}),": allowed origin (exact string) or ",e.jsx(s.InlineCode,{children:"*"})," (any). ",e.jsx("b",{children:"Note:"})," cannot be ",e.jsx(s.InlineCode,{children:"*"})," when sending cookies."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Access-Control-Allow-Credentials"}),": ",e.jsx(s.InlineCode,{children:"true"})," if the server allows credentials (cookies, Authorization header) to be sent and read."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Access-Control-Allow-Methods"}),": methods permitted on the resource."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Access-Control-Allow-Headers"}),": non-simple request headers the server accepts (e.g., ",e.jsx(s.InlineCode,{children:"content-type"}),", ",e.jsx(s.InlineCode,{children:"authorization"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Access-Control-Max-Age"}),": how long the preflight result can be cached by the browser."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Vary: Origin"}),": tells caches the response depends on the ",e.jsx(s.InlineCode,{children:"Origin"})," request header."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Cookies & Important Attributes"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Cookie:"})," a small key-value sent by the server via ",e.jsx(s.InlineCode,{children:"Set-Cookie"}),"; the browser auto-attaches it to subsequent matching requests."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Domain/Path:"})," scoping rules for where the cookie is sent."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Secure:"})," only sent over ",e.jsx(s.InlineCode,{children:"https"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"HttpOnly:"})," not readable from JavaScript (mitigates XSS data theft)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"SameSite"}),": controls cross-site sending:",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Lax:"})," sent on top-level navigations (safe default for sessions)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Strict:"})," only first-party; strongest CSRF protection, may break SSO flows."]}),e.jsxs("li",{children:[e.jsx("b",{children:"None:"})," sent in all contexts, ",e.jsx("b",{children:"requires Secure"}),", used for legitimate cross-site cases."]})]})]}),e.jsxs("li",{children:[e.jsx("b",{children:"Max-Age / Expires:"})," cookie lifetime (session vs persistent)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Prefixes:"})," ",e.jsx(s.InlineCode,{children:"__Host-"})," (must be Secure, no Domain attribute, Path=/) and ",e.jsx(s.InlineCode,{children:"__Secure-"})," (must be Secure)."]})]}),e.jsx(s.Pre,{children:`// Session cookie, CSRF-resistant default
Set-Cookie: sessionId=abc123; Path=/; HttpOnly; Secure; SameSite=Lax

// Cross-site cookie (e.g., central auth under a different domain)
Set-Cookie: idpToken=...; Path=/; Secure; SameSite=None

// Strictest (won't be sent on cross-site navigations)
Set-Cookie: csrftoken=...; Path=/; Secure; HttpOnly; SameSite=Strict`})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Sending Cookies with Fetch/Axios"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:["Browsers ",e.jsx("i",{children:"do not"})," send cross-origin cookies by default in XHR/fetch. You must opt-in to ",e.jsx("b",{children:"credentials"}),"."]}),e.jsxs("li",{children:["Server must also echo ",e.jsx(s.InlineCode,{children:"Access-Control-Allow-Credentials: true"})," and a ",e.jsx("b",{children:"specific"})," ",e.jsx(s.InlineCode,{children:"Access-Control-Allow-Origin"}),"."]})]}),e.jsx(s.Pre,{children:`// fetch (credentials)
await fetch("https://api.example.com/me", {
  method: "GET",
  credentials: "include", // send and accept cookies
});

// axios
axios.get("https://api.example.com/me", { withCredentials: true });`}),e.jsxs(s.Small,{children:["If you see: ",e.jsx("i",{children:`"Credential is not supported if the CORS header 'Access-Control-Allow-Origin' is '*'"`}),", set a specific origin instead of ",e.jsx(s.InlineCode,{children:"*"}),"."]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Server Examples (Node/Express)"}),e.jsx(s.Pre,{children:`// (A) Using the 'cors' package
const express = require("express");
const cors = require("cors");
const app = express();

app.use(cors({
  origin: "https://app.example.com", // or a function to reflect/whitelist
  credentials: true,                 // allows cookies/Authorization
  methods: ["GET","POST","PUT","DELETE","OPTIONS"],
  allowedHeaders: ["content-type", "authorization"],
  maxAge: 600
}));

app.get("/me", (req, res) => { res.json({ ok: true }); });

// (B) Manual headers
app.use((req, res, next) => {
  const origin = req.headers.origin;
  const allowed = ["https://app.example.com"];
  if (allowed.includes(origin)) {
    res.setHeader("Access-Control-Allow-Origin", origin);
    res.setHeader("Vary", "Origin");
    res.setHeader("Access-Control-Allow-Credentials", "true");
    res.setHeader("Access-Control-Allow-Methods", "GET,POST,PUT,DELETE,OPTIONS");
    res.setHeader("Access-Control-Allow-Headers", "content-type,authorization");
    res.setHeader("Access-Control-Max-Age", "600");
  }
  if (req.method === "OPTIONS") return res.sendStatus(204);
  next();
});`})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Security Notes: Tokens, XSS, and CSRF"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"CORS is not auth:"})," it only governs which origins may read responses. You still need authentication/authorization."]}),e.jsxs("li",{children:[e.jsx("b",{children:"HttpOnly session cookies"})," protect tokens from JavaScript access (mitigate XSS data theft)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"CSRF:"})," happens when a victim's browser auto-sends cookies to a target site from a malicious page. Mitigate with ",e.jsx(s.InlineCode,{children:"SameSite=Lax/Strict"}),", CSRF tokens on state-changing requests, and double-submit patterns if needed."]}),e.jsxs("li",{children:[e.jsx("b",{children:"LocalStorage tokens:"})," not auto-sent, so less CSRF-prone; but readable by JS (risk on XSS). If used, harden against XSS."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Prefer"})," server-set, ",e.jsx(s.InlineCode,{children:"HttpOnly; Secure; SameSite=Lax"})," cookies for session auth in browser apps."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Do & Don't"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," send a specific ",e.jsx(s.InlineCode,{children:"Access-Control-Allow-Origin"})," when using credentials."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," set ",e.jsx(s.InlineCode,{children:"Vary: Origin"})," for cache correctness."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," use ",e.jsx(s.InlineCode,{children:"Secure"}),", ",e.jsx(s.InlineCode,{children:"HttpOnly"}),", and an appropriate ",e.jsx(s.InlineCode,{children:"SameSite"})," on auth cookies."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don't"})," expose wildcard origin with credentials (",e.jsx(s.InlineCode,{children:"*"})," + cookies is invalid)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don't"})," treat CORS as a firewall; validate auth and authorize on the server."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Troubleshooting"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Blocked by CORS:"})," check server headers match request (origin, methods, headers) and preflight response has status 204/200."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Credentials ignored:"})," ensure ",e.jsx(s.InlineCode,{children:'credentials: "include"'})," (or ",e.jsx(s.InlineCode,{children:"withCredentials: true"}),") and ",e.jsx(s.InlineCode,{children:"Access-Control-Allow-Credentials: true"})," + non-wildcard ",e.jsx(s.InlineCode,{children:"Allow-Origin"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Cookie not set:"})," cross-site cookies require ",e.jsx(s.InlineCode,{children:"SameSite=None; Secure"}),"; domain/path must match; HTTPS required for ",e.jsx(s.InlineCode,{children:"Secure"}),"."]})]})]}),e.jsxs(s.Section,{children:[e.jsx(s.H2,{children:"Glossary"}),e.jsxs(s.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Origin:"})," scheme + host + port tuple."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Simple request:"})," a request that avoids preflight due to method/headers/content-type constraints."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Preflight:"})," the browser's permission check (",e.jsx(s.InlineCode,{children:"OPTIONS"}),") before the actual request."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Credentials:"})," cookies, Authorization headers, TLS client certs—user-specific data attached to requests."]}),e.jsxs("li",{children:[e.jsx("b",{children:"First-party vs Third-party cookie:"})," whether the cookie's site matches the top-level page's site."]})]})]}),e.jsx(s.Callout,{children:"Summary: CORS lets servers opt-in to cross-origin reads, while cookies carry state. Use precise CORS headers, send credentials intentionally, and harden auth cookies with Secure/HttpOnly/SameSite for safe, reliable browser auth."})]});export{r as default};
