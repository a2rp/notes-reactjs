import{j as e}from"./index-DXTGIo8z.js";import{S as i}from"./styled-DjXHKqBo.js";const r=()=>e.jsxs(i.Page,{children:[e.jsx(i.Title,{children:"REST Patterns"}),e.jsxs(i.Lead,{children:[e.jsx("b",{children:"REST (Representational State Transfer)"})," is an architectural style for building stateless client-server APIs over HTTP. In REST, your API exposes ",e.jsx("b",{children:"resources"})," (things) via URLs, and clients transfer ",e.jsx("b",{children:"representations"})," (usually JSON) of those resources using standard HTTP methods (GET, POST, PUT, PATCH, DELETE)."]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Core Terms (precise definitions)"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Resource:"})," A business entity or collection (e.g., ",e.jsx(i.InlineCode,{children:"/users"}),", ",e.jsx(i.InlineCode,{children:"/orders/42"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Representation:"})," The serialized form sent on the wire (JSON by default), identified by a ",e.jsx("b",{children:"media type"})," (e.g., ",e.jsx(i.InlineCode,{children:"application/json"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Endpoint (URL):"})," The address for a resource (nouns, plural, hierarchical)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"HTTP Method (Verb):"})," Action semantics (GET read, POST create, PUT replace, PATCH partial update, DELETE remove)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Safe method:"})," Method that doesn't change state (e.g., GET, HEAD)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Idempotent method:"})," Repeating the same request has the same effect (PUT, DELETE, GET are idempotent; POST is typically not)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Status code:"})," 3-digit number describing the result (2xx success, 4xx client error, 5xx server error)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Header:"})," Key-value metadata (e.g., ",e.jsx(i.InlineCode,{children:"Content-Type"}),", ",e.jsx(i.InlineCode,{children:"Authorization"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Content negotiation:"})," Client asks for a representation via ",e.jsx(i.InlineCode,{children:"Accept"})," (e.g., JSON)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Statelessness:"})," Server does not keep client session between requests; all context comes in each request."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Resource Modeling & URL Design"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:["Use ",e.jsx("b",{children:"nouns"}),", plural for collections: ",e.jsx(i.InlineCode,{children:"/books"}),", ",e.jsx(i.InlineCode,{children:"/books/123"}),"."]}),e.jsxs("li",{children:["Model hierarchy/relations: ",e.jsx(i.InlineCode,{children:"/orders/42/items"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Avoid verbs"})," in paths; use HTTP methods for actions (don't do ",e.jsx(i.InlineCode,{children:"/createUser"}),")."]}),e.jsxs("li",{children:["Consistent ",e.jsx("b",{children:"kebab-case"})," for paths; avoid trailing slashes variance."]})]}),e.jsx(i.Pre,{children:`# Good
GET   /v1/users
GET   /v1/users/42
POST  /v1/users
GET   /v1/orders/42/items

# Avoid
POST  /v1/createUser
GET   /v1/getAllUsers`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"HTTP Methods & Semantics"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"GET"})," (safe, idempotent): read resources. May be cached."]}),e.jsxs("li",{children:[e.jsx("b",{children:"POST"})," (not idempotent): create or perform non-idempotent actions. Returns 201 with ",e.jsx(i.InlineCode,{children:"Location"})," header when creating."]}),e.jsxs("li",{children:[e.jsx("b",{children:"PUT"})," (idempotent): full replace of a resource at the URL."]}),e.jsxs("li",{children:[e.jsx("b",{children:"PATCH"})," (partial update): send only changed fields (e.g., JSON Merge Patch)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"DELETE"})," (idempotent): remove the resource."]}),e.jsxs("li",{children:[e.jsx("b",{children:"HEAD"}),": like GET without body. ",e.jsx("b",{children:"OPTIONS"}),": capability discovery (CORS preflight)."]})]}),e.jsx(i.Pre,{children:`# Create
POST /v1/todos
Content-Type: application/json

{ "title": "Read a book" }

# Response
201 Created
Location: /v1/todos/af3c2
Content-Type: application/json

{ "id": "af3c2", "title": "Read a book", "done": false }`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Useful Status Codes (when to use)"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"200 OK"}),": success with body. ",e.jsx("b",{children:"204 No Content"}),": success without body."]}),e.jsxs("li",{children:[e.jsx("b",{children:"201 Created"}),": resource created; include ",e.jsx(i.InlineCode,{children:"Location"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"202 Accepted"}),": accepted for async processing (use webhook/polling later)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"304 Not Modified"}),": client's cached copy is still valid."]}),e.jsxs("li",{children:[e.jsx("b",{children:"400 Bad Request"}),": malformed input. ",e.jsx("b",{children:"401"})," auth required. ",e.jsx("b",{children:"403"})," forbidden. ",e.jsx("b",{children:"404"})," not found."]}),e.jsxs("li",{children:[e.jsx("b",{children:"409 Conflict"}),": version/concurrency conflict. ",e.jsx("b",{children:"422 Unprocessable Entity"}),": validation failed."]}),e.jsxs("li",{children:[e.jsx("b",{children:"429 Too Many Requests"}),": rate limit hit. ",e.jsx("b",{children:"500/503"}),": server issues."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Pagination, Filtering, Sorting, Projection"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Offset pagination:"})," ",e.jsx(i.InlineCode,{children:"?page=2&limit=20"})," (simple, can be slow on huge pages)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Cursor pagination:"})," ",e.jsx(i.InlineCode,{children:"?limit=20&cursor=eyJpZCI6IjQyIn0"})," (stable for large data/changes)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Filtering:"})," ",e.jsx(i.InlineCode,{children:"?status=active&tag=react"})]}),e.jsxs("li",{children:[e.jsx("b",{children:"Sorting:"})," ",e.jsx(i.InlineCode,{children:"?sort=-createdAt,title"})," (minus for desc)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Projection (sparse fields):"})," ",e.jsx(i.InlineCode,{children:"?fields=id,title"})]})]}),e.jsx(i.Pre,{children:`# Cursor example
GET /v1/todos?limit=3&cursor=eyJpZCI6ImFmM2MyIn0
Link: <https://api.example.com/v1/todos?limit=3&cursor=NEXT123>; rel="next"`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Caching (ETag, Last-Modified, Cache-Control)"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Cache-Control:"})," ",e.jsx(i.InlineCode,{children:"max-age"})," (seconds), ",e.jsx(i.InlineCode,{children:"public/private"}),", ",e.jsx(i.InlineCode,{children:"s-maxage"})," for CDNs."]}),e.jsxs("li",{children:[e.jsx("b",{children:"ETag:"})," server version fingerprint; client sends ",e.jsx(i.InlineCode,{children:"If-None-Match"})," to validate."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Last-Modified:"})," alternative validator; client sends ",e.jsx(i.InlineCode,{children:"If-Modified-Since"}),"."]}),e.jsxs("li",{children:["On a match, server returns ",e.jsx("b",{children:"304"})," without body to save bandwidth."]})]}),e.jsx(i.Pre,{children:`# Client validating a cached response
GET /v1/todos/af3c2
If-None-Match: "v7"

# Server
304 Not Modified`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Concurrency Control & Idempotency"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Optimistic concurrency:"})," send ",e.jsx(i.InlineCode,{children:'If-Match: "etag"'})," with PUT/PATCH; server returns ",e.jsx("b",{children:"409"})," if versions differ."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Idempotency key (POST):"})," client sends a unique key (e.g., ",e.jsx(i.InlineCode,{children:"Idempotency-Key"}),") so retries don't duplicate work (payments, orders)."]})]}),e.jsx(i.Pre,{children:`# Conditional update
PATCH /v1/todos/af3c2
If-Match: "v7"
Content-Type: application/merge-patch+json

{ "done": true }`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Versioning Strategies"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"URI versioning:"})," ",e.jsx(i.InlineCode,{children:"/v1/"}),", ",e.jsx(i.InlineCode,{children:"/v2/"})," (simplest, explicit)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Header/media type:"})," ",e.jsx(i.InlineCode,{children:"Accept: application/vnd.example.v2+json"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Design for evolution:"})," be additive (new fields), don't rename/remove without a deprecation path."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Errors (consistent structure)"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:["Use JSON errors with stable shape, ideally ",e.jsx("b",{children:"Problem Details"})," (",e.jsx(i.InlineCode,{children:"application/problem+json"}),")."]}),e.jsxs("li",{children:["Include ",e.jsx(i.InlineCode,{children:"type"}),", ",e.jsx(i.InlineCode,{children:"title"}),", ",e.jsx(i.InlineCode,{children:"status"}),", ",e.jsx(i.InlineCode,{children:"detail"}),", optional ",e.jsx(i.InlineCode,{children:"errors[]"})," for field issues."]})]}),e.jsx(i.Pre,{children:`HTTP/1.1 422 Unprocessable Entity
Content-Type: application/problem+json

{
  "type": "https://example.com/problems/validation-error",
  "title": "Validation failed",
  "status": 422,
  "detail": "One or more fields are invalid.",
  "errors": [
    { "field": "title", "message": "Title is required." }
  ]
}`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Security (must know)"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"HTTPS only."})," Never send tokens over HTTP."]}),e.jsxs("li",{children:[e.jsx("b",{children:"AuthN/AuthZ:"})," API keys (simple), Basic (avoid), Bearer tokens (JWT), OAuth 2.0 (delegated access)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"CORS:"})," configure allowed origins/headers/methods; preflights via ",e.jsx(i.InlineCode,{children:"OPTIONS"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Least privilege:"})," scope tokens; rotate; store securely. Avoid secrets in URLs."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Rate limiting:"})," protect with limits and return headers (",e.jsx(i.InlineCode,{children:"X-RateLimit-*"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Input validation:"})," validate & sanitize every input; never trust the client."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Reliability Patterns"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Timeouts & retries:"})," retry on ",e.jsx("b",{children:"transient"})," errors (5xx, timeouts) with ",e.jsx("b",{children:"exponential backoff + jitter"}),"."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Circuit breaker:"})," temporarily stop calls to an unhealthy dependency to recover."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Async work:"})," return ",e.jsx("b",{children:"202 Accepted"})," + ",e.jsx(i.InlineCode,{children:"status"})," URL, or send ",e.jsx("b",{children:"webhooks"})," on completion; make webhooks idempotent."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Media Types & Partial Updates"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:["Default to ",e.jsx(i.InlineCode,{children:"application/json"})," for bodies."]}),e.jsxs("li",{children:["For PATCH, consider ",e.jsx(i.InlineCode,{children:"application/merge-patch+json"})," (simple) or ",e.jsx(i.InlineCode,{children:"application/json-patch+json"})," (RFC 6902 operations)."]}),e.jsxs("li",{children:["For uploads, use ",e.jsx(i.InlineCode,{children:"multipart/form-data"})," (see ",e.jsx("i",{children:"File Uploads"})," topic)."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Mini Flow (Create → Fetch → Update)"}),e.jsx(i.Pre,{children:`# Create a todo
POST /v1/todos
Content-Type: application/json

{ "title": "Ship REST notes" }

# Server
201 Created
Location: /v1/todos/af3c2
ETag: "v1"

# Fetch it (client caches)
GET /v1/todos/af3c2
If-None-Match: "v1"

# Update it safely (conditional)
PATCH /v1/todos/af3c2
If-Match: "v1"
Content-Type: application/merge-patch+json

{ "done": true }

# Server
200 OK
ETag: "v2"`})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Do & Don't"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," design with nouns + proper HTTP semantics."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," provide pagination, filtering, sorting, projection for lists."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," cache GETs with ETags; support conditional requests."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Do"})," return consistent JSON error shapes; include helpful messages."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don't"})," break idempotency of PUT/DELETE; don't overload GET to change state."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Don't"})," expose internal errors or stack traces to clients."]})]})]}),e.jsxs(i.Section,{children:[e.jsx(i.H2,{children:"Glossary"}),e.jsxs(i.List,{children:[e.jsxs("li",{children:[e.jsx("b",{children:"HATEOAS:"})," Including links in responses to guide the client (optional in many practical APIs)."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Cursor:"})," An opaque token that points to a position in a dataset for pagination."]}),e.jsxs("li",{children:[e.jsx("b",{children:"ETag:"})," Identifier for a specific version of a resource representation."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Idempotency key:"})," Client-generated unique key to deduplicate POST requests on retries."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Problem Details:"})," A standard JSON format for API errors (",e.jsx(i.InlineCode,{children:"application/problem+json"}),")."]})]})]}),e.jsx(i.Callout,{children:"Summary: Design resource-oriented URLs, use correct HTTP methods, return meaningful status codes, standardize errors, support pagination/filtering, and build in caching, versioning, security, and reliability from day one. These patterns make REST APIs predictable, fast, and easy to use."})]});export{r as default};
